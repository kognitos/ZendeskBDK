name: Semantic Release

on:
  workflow_call:
    inputs:
      BOOK_NAME:
        required: true
        type: string
      BDK_RUNTIME_VERSION:
        required: true
        type: string
      DOCKER_REGISTRY:
        required: true
        type: string
      TERRAFORM_BACKEND_BUCKET_NAME:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
      AWS_ACCOUNT_ID:
        required: false
        type: string
      TERRAFORM_WORKING_DIRECTORY:
        required: false
        type: string
        default: "./terraform"
      BRANCHES:
        required: false
        type: string
        default: "main"
    outputs:
      new_release_published: 
        value: ${{ jobs.SemanticRelease.outputs.new_release_published }}
      new_release_version: 
        value: ${{ jobs.SemanticRelease.outputs.new_release_version }}
      new_release_major_version: 
        value: ${{ jobs.SemanticRelease.outputs.new_release_major_version }}
      new_release_minor_version: 
        value: ${{ jobs.SemanticRelease.outputs.new_release_minor_version }}
      new_release_patch_version: 
        value: ${{ jobs.SemanticRelease.outputs.new_release_patch_version }}
      lamnda_name: 
        value: ${{ jobs.TerraformDeploy.outputs.lambda_name }}
      lamnda_arn: 
        value: ${{ jobs.TerraformDeploy.outputs.lambda_arn }}

jobs:
  SemanticRelease:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_major_version: ${{ steps.semantic.outputs.new_release_major_version }}
      new_release_minor_version: ${{ steps.semantic.outputs.new_release_minor_version }}
      new_release_patch_version: ${{ steps.semantic.outputs.new_release_patch_version }}
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.BDK_PAT_TOKEN }}
    - name: Setup Credentials
      uses: ./.github/actions/setup_credentials
      id: setup_credentials
      with:
        AWS_REGION: ${{ inputs.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        AWS_ROLE_EXTERNAL_ID: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
    - name: Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v4
      with:
        branches: ${{ inputs.BRANCHES }}
        extra_plugins: |
          @semantic-release/exec
          @codedependant/semantic-release-docker
      env:
        BOOK_NAME: ${{ inputs.BOOK_NAME }}
        DOCKER_REGISTRY: ${{ inputs.DOCKER_REGISTRY }}
        BDK_RUNTIME_VERSION: ${{ inputs.BDK_RUNTIME_VERSION }}
        CODE_ARTIFACT_TOKEN: ${{ steps.setup_credentials.outputs.CODE_ARTIFACT_TOKEN }}
        DOCKER_REGISTRY_USER: ${{ steps.setup_credentials.outputs.DOCKER_REGISTRY_USER }}
        DOCKER_REGISTRY_PASSWORD: ${{ steps.setup_credentials.outputs.DOCKER_REGISTRY_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.BDK_PAT_TOKEN }}

  TerraformDeploy:
    runs-on: ubuntu-latest
    name: Terraform Deploy
    needs: [ SemanticRelease ]
    if: needs.SemanticRelease.outputs.new_release_published == 'true'
    outputs:
      lamnda_name: ${{ steps.terraform.outputs.lambda_name }}
      lamnda_arn: ${{ steps.terraform.outputs.lambda_arn }}
    steps:
    - name: Terraform Deploy
      id: terraform
      uses: ./.github/actions/terraform
      with:
        INIT_CONFIG: -backend-config="region=${{ inputs.AWS_REGION }}" -backend-config="bucket=${{ inputs.TERRAFORM_BACKEND_BUCKET_NAME }}" -backend-config="key=${{ inputs.BOOK_NAME }}/${{ inputs.BOOK_NAME }}_${{ needs.SemanticRelease.outputs.new_release_version }}.tfstate"
        VARIABLES_OVERRIDE: -var book_name=${{ inputs.BOOK_NAME }} -var region=${{ inputs.AWS_REGION }} -var bdk_runtime_version=${{ inputs.BDK_RUNTIME_VERSION }} -var book_version=${{ needs.SemanticRelease.outputs.new_release_version }} -var image_uri=${{ inputs.DOCKER_REGISTRY }}/kognitos/book/${{ inputs.BOOK_NAME }}:${{ needs.SemanticRelease.outputs.new_release_version }}
        WORKING_DIRECTORY: ${{ inputs.TERRAFORM_WORKING_DIRECTORY }}
