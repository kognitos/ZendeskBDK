name: Main Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  Locals:
    name: Setup Local Variables
    runs-on: ubuntu-latest
    outputs:
      BOOK_NAME: "openweather"  # This is set by cookiecutter
      AWS_ACCOUNT_ID: "719468614044"
      DOCKER_REGISTRY: "719468614044.dkr.ecr.us-west-2.amazonaws.com"  # This is set by cookiecutter
      TERRAFORM_BACKEND_BUCKET_NAME: "bdk-terraform-backend"
    steps:
    - run: echo "Setting up local variables..."

  Setup:
    runs-on: ubuntu-latest
    needs: Locals
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: GitLint
      uses: ./.github/actions/gitlint
    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install Python Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.8
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        role-skip-session-tagging: true
    - name: Configure Poetry
      shell: bash
      run: |
        python -m poetry config virtualenvs.in-project true
        python -m poetry config virtualenvs.create true
        python -m poetry config http-basic.bdk aws $(aws codeartifact get-authorization-token --domain-owner ${{ needs.Locals.outputs.AWS_ACCOUNT_ID }} --domain kognitos --query 'authorizationToken' --output text)
    - name: View poetry version
      run: poetry --version
    - name: Install dependencies
      run: |
        python -m poetry install
    - name: Lint
      run: |
        python -m poetry run lint
    - name: Type Check
      run: |
        python -m poetry run type-check
    - name: Test
      run: |
        python -m poetry run tests

  SemanticRelease:
    uses: ./.github/workflows/rw-semantic-release.yaml
    needs: [ Locals, Setup ]
    with:
      BOOK_NAME: ${{ needs.Locals.outputs.BOOK_NAME }}
      DOCKER_REGISTRY: ${{ needs.Locals.outputs.DOCKER_REGISTRY }}
      TERRAFORM_BACKEND_BUCKET_NAME: ${{ needs.Locals.outputs.TERRAFORM_BACKEND_BUCKET_NAME }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      AWS_ROLE_EXTERNAL_ID: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
