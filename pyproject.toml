[tool.poetry]
name = "openweather"
version = "1.2.0"
description = "OpenWeather book enables users to fetch real-time temperature data for any city worldwide via the OpenWeather API."
authors = ["Emiliano Lesende <emiliano.lesende@gmail.com>"]
readme = "README.md"
packages = [{include = "openweather", from="src"}]

[cloud]
AWS_REGION = "us-west-2"
AWS_ACCOUNT_ID = "719468614044"
DOCKER_REGISTRY = "{AWS_ACCOUNT_ID}.dkr.ecr.{AWS_REGION}.amazonaws.com"
TERRAFORM_BACKEND_BUCKET_NAME = "bdk-terraform-backend"

[environment]
bdk_runtime_version = "latest"
bdk_image_repo = "719468614044.dkr.ecr.us-west-2.amazonaws.com/kognitos/bdk"

[[tool.poetry.source]]
name = "bdk"
url = "https://kognitos-719468614044.d.codeartifact.us-west-2.amazonaws.com/pypi/bdk/simple/"
priority = "explicit"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
requests = "^2.31.0"
kognitos-bdk-api = {version = "^0.13", source = "bdk"}
kognitos-bdk-linter = {version = "^1.1", source = "bdk"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
mypy = "^1.8.0"
isort = "^5.13.2"
black = "^24.2.0"
pylint = "^3.0.3"
requests-mock = "^1.11.0"
pyright = "^1.1.360"
pre-commit = "^3.7.1"

[tool.poetry.scripts]
tests = "poetry_scripts:run_tests"
format = "poetry_scripts:run_format"
lint = "poetry_scripts:run_lint"
type-check = "poetry_scripts:run_type_check"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
include = ["data/*"]

[tool.pylint.MAIN]
py-version = "3.11"
load-plugins = ["kognitos.bdk.linter"]

[tool.pylint.messages_control]
disable = [
    "line-too-long",
    "redefined-outer-name"
]

[tool.poetry.plugins."kognitos-book"]
openweather = "openweather.book:OpenWeatherBook"
